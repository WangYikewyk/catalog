name: Go

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]
  schedule:
    - cron: "0 0/4 ? * *"

env:
  # Common versions
  GO_VERSION: '1.14'
  GOLANGCI_VERSION: 'v1.31'
  DOCKER_BUILDX_VERSION: 'v0.4.2'
  KIND_VERSION: 'v0.7.0'

jobs:

  build:
    name: Build
    runs-on: ubuntu-latest
    steps:

    - name: Set up Go 1.13
      uses: actions/setup-go@v1
      with:
        go-version: 1.13
      id: go

    - name: Check out code into the Go module directory
      uses: actions/checkout@v2

    - name: Install ginkgo
      run:  |
        sudo apt-get update
        sudo apt-get install -y golang-ginkgo-dev

    - name: Install Helm
      uses: engineerd/configurator@v0.0.5
      with:
        name: helm
        url: https://get.helm.sh/helm-v3.1.2-linux-amd64.tar.gz
        pathInArchive: linux-amd64/helm

    - name: Setup Kind Cluster
      uses: engineerd/setup-kind@v0.5.0
      with:
        version: "v0.7.0"

    - name: install Kubebuilder
      uses: wonderflow/kubebuilder-action@v1.1

    - name: Build
      run:  |
        make build

    - name: Test
      run:  |
        make test

    - name: Kubernetes E2E
      run: |
        kind get kubeconfig > kubeconfig
        export KUBECONFIG="$PWD/kubeconfig"
        kubectl wait -n kube-system --for=condition=Ready -l k8s-app=kube-dns pods --timeout=300s
        echo "will run e2e for every project here"

  unit-tests:
   runs-on: ubuntu-20.04
   steps:
    - name: Set up Go 1.14
      uses: actions/setup-go@v1
      with:
        go-version: ${{ env.GO_VERSION }}
      id: go

    - name: Check out code into the Go module directory
      uses: actions/checkout@v2
      with:
        submodules: true

    - name: Cache Go Dependencies
      uses: actions/cache@v2
      with:
        path: .work/pkg
        key: ${{ runner.os }}-pkg-${{ hashFiles('**/go.sum') }}
        restore-keys: ${{ runner.os }}-pkg-

    - name: Install ginkgo
      run:  |
        sudo apt-get install -y golang-ginkgo-dev

    - name: Setup Kind Cluster
      uses: engineerd/setup-kind@v0.5.0
      with:
        version: ${{ env.KIND_VERSION }}

    - name: install Kubebuilder
      uses: wonderflow/kubebuilder-action@v1.1

    - name: Run Make test
      run: make test

    - name: Upload coverage report
      uses: codecov/codecov-action@v1
      with:
        token: ${{ secrets.CODECOV_TOKEN }}
        file: ./coverage.txt
        flags: unittests
        name: codecov-umbrella
